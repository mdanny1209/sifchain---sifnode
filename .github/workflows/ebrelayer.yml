name: Deploy EBRELAYER Swingset

on:
  push:
    branches:
      - 'ebrelayer-pipeline-development'

jobs:
  build:
    name: deploy-ebrelayer
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        ruby: [ 2.3 ]

    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}

      - name: Setup AWS Profile and KUBECONFIG
        shell: bash
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN_SWINGSET_US }}
          KUBECONFIG: ${{ secrets.KUBECONFIG_SWINGSET_US }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_CLUSTER_NAME: "sifchain-aws-swing-set-us"
          AWS_ROLE: "arn:aws:iam::983740309645:role/OrganizationAccountAccessRole"
          APP_ENV: "swing-set"
        if: github.ref == 'refs/heads/ebrelayer-pipeline-development'
        run: |
          set +x
          rake "cluster:automation:configure_aws_kube_profile[${APP_ENV}, ${AWS_ACCESS_KEY_ID}, ${AWS_SECRET_ACCESS_KEY}, ${AWS_REGION}, ${AWS_ROLE}, ${AWS_CLUSTER_NAME}]"

      - name: Install Rake
        run: gem install rake

      - name: Login to Vault on Swing-Set
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN_SWINGSET_US }}
        shell: bash
        if: github.ref == 'refs/heads/ebrelayer-pipeline-development'
        run: |
          set +x
          export PATH=$(pwd):${PATH}
          echo "======"
          rake "cluster:vault:login[]"

      - name: Setup Vault Policy on Swing-Set
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN_SWINGSET_US }}
          app_namespace: "ebrelayer"
          image: "sifchain/ebrelayer"
          image_tag: "testnet-genesis"
          env: "swing-set"
          app_name: "ebrelayer"
        shell: bash
        if: github.ref == 'refs/heads/ebrelayer-pipeline-development'
        run: |
          set +x
          export PATH=$(pwd):${PATH}
          echo "======"
          rake "cluster:vault:createpolicy[${app_namespace}, ${image}, ${image_tag}, ${env}, ${app_name}]"

      - name: Enable Kubernetes Vault Communication If Not Enabled
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN_SWINGSET_US }}
        shell: bash
        if: github.ref == 'refs/heads/ebrelayer-pipeline-development'
        run: |
          set +x
          export PATH=$(pwd):${PATH}
          echo "======"
          rake "cluster:vault:enablekubernetes[]"

      - name: Configure Vault to Mount Secrets To Application
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN_SWINGSET_US }}
          app_namespace: "ebrelayer"
          image: "sifchain/ebrelayer"
          image_tag: "testnet-genesis"
          env: "swing-set"
          app_name: "ebrelayer"
        shell: bash
        if: github.ref == 'refs/heads/ebrelayer-pipeline-development'
        run: |
          set +x
          export PATH=$(pwd):${PATH}
          echo "======"
          rake "cluster:vault:configureapplication[${app_namespace}, ${image}, ${image_tag}, ${env}, ${app_name}]"

      - name: Anchore Image Scan
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN_SWINGSET_US }}
          app_namespace: "ebrelayer"
          image: "sifchain/ebrelayer"
          image_tag: "testnet-genesis"
          env: "swing-set"
          app_name: "ebrelayer"
        shell: bash
        if: github.ref == 'refs/heads/ebrelayer-pipeline-development'
        run: |
          set +x
          export PATH=$(pwd):${PATH}
          echo "======"
          rake "cluster:anchore:scan[${image}, ${image_tag}, ${app_name}]"

      - name: Deploy Ebrelayer to Kubernetes Via Helm.
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN_SWINGSET_US }}
          app_namespace: "ebrelayer"
          image: "sifchain/ebrelayer"
          image_tag: "testnet-genesis"
          env: "swing-set"
          app_name: "ebrelayer"
        shell: bash
        if: github.ref == 'refs/heads/ebrelayer-pipeline-development'
        run: |
          set +x
          export PATH=$(pwd):${PATH}
          echo "======"
          rake "cluster:vault:deploy[${app_namespace}, ${image}, ${image_tag}, ${env}, ${app_name}]"

      - name: Clean KUBECONFIG
        shell: bash
        if: github.ref == 'refs/heads/ebrelayer-pipeline-development'
        run: |
          set +x
          rm -rf ./kubeconfig