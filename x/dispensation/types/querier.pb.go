// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: sifnode/dispensation/v1/querier.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type QueryRecordsByRecipientAddr struct {
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *QueryRecordsByRecipientAddr) Reset()         { *m = QueryRecordsByRecipientAddr{} }
func (m *QueryRecordsByRecipientAddr) String() string { return proto.CompactTextString(m) }
func (*QueryRecordsByRecipientAddr) ProtoMessage()    {}
func (*QueryRecordsByRecipientAddr) Descriptor() ([]byte, []int) {
	return fileDescriptor_5362b46faa94baa8, []int{0}
}
func (m *QueryRecordsByRecipientAddr) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryRecordsByRecipientAddr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryRecordsByRecipientAddr.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryRecordsByRecipientAddr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRecordsByRecipientAddr.Merge(m, src)
}
func (m *QueryRecordsByRecipientAddr) XXX_Size() int {
	return m.Size()
}
func (m *QueryRecordsByRecipientAddr) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRecordsByRecipientAddr.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRecordsByRecipientAddr proto.InternalMessageInfo

func (m *QueryRecordsByRecipientAddr) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type QueryRecordsByDistributionName struct {
	DistributionName string                                  `protobuf:"bytes,1,opt,name=distribution_name,json=distributionName,proto3" json:"distribution_name,omitempty"`
	Status           github_com_cosmos_cosmos_sdk_types.Uint `protobuf:"bytes,2,opt,name=status,proto3,customtype=github.com/cosmos/cosmos-sdk/types.Uint" json:"status" yaml:"status"`
}

func (m *QueryRecordsByDistributionName) Reset()         { *m = QueryRecordsByDistributionName{} }
func (m *QueryRecordsByDistributionName) String() string { return proto.CompactTextString(m) }
func (*QueryRecordsByDistributionName) ProtoMessage()    {}
func (*QueryRecordsByDistributionName) Descriptor() ([]byte, []int) {
	return fileDescriptor_5362b46faa94baa8, []int{1}
}
func (m *QueryRecordsByDistributionName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueryRecordsByDistributionName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueryRecordsByDistributionName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueryRecordsByDistributionName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRecordsByDistributionName.Merge(m, src)
}
func (m *QueryRecordsByDistributionName) XXX_Size() int {
	return m.Size()
}
func (m *QueryRecordsByDistributionName) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRecordsByDistributionName.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRecordsByDistributionName proto.InternalMessageInfo

func (m *QueryRecordsByDistributionName) GetDistributionName() string {
	if m != nil {
		return m.DistributionName
	}
	return ""
}

func init() {
	proto.RegisterType((*QueryRecordsByRecipientAddr)(nil), "sifnode.dispensation.v1.QueryRecordsByRecipientAddr")
	proto.RegisterType((*QueryRecordsByDistributionName)(nil), "sifnode.dispensation.v1.QueryRecordsByDistributionName")
}

func init() {
	proto.RegisterFile("sifnode/dispensation/v1/querier.proto", fileDescriptor_5362b46faa94baa8)
}

var fileDescriptor_5362b46faa94baa8 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2d, 0xce, 0x4c, 0xcb,
	0xcb, 0x4f, 0x49, 0xd5, 0x4f, 0xc9, 0x2c, 0x2e, 0x48, 0xcd, 0x2b, 0x4e, 0x2c, 0xc9, 0xcc, 0xcf,
	0xd3, 0x2f, 0x33, 0xd4, 0x2f, 0x2c, 0x4d, 0x2d, 0xca, 0x4c, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0x12, 0x87, 0x2a, 0xd3, 0x43, 0x56, 0xa6, 0x57, 0x66, 0x28, 0x25, 0x92, 0x9e, 0x9f,
	0x9e, 0x0f, 0x56, 0xa3, 0x0f, 0x62, 0x41, 0x94, 0x2b, 0x99, 0x73, 0x49, 0x07, 0x96, 0xa6, 0x16,
	0x55, 0x06, 0xa5, 0x26, 0xe7, 0x17, 0xa5, 0x14, 0x3b, 0x81, 0x18, 0x99, 0x05, 0x99, 0xa9, 0x79,
	0x25, 0x8e, 0x29, 0x29, 0x45, 0x42, 0x12, 0x5c, 0xec, 0x89, 0x29, 0x29, 0x45, 0xa9, 0xc5, 0xc5,
	0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x30, 0xae, 0xd2, 0x72, 0x46, 0x2e, 0x39, 0x54, 0x9d,
	0x2e, 0x99, 0xc5, 0x25, 0x45, 0x99, 0x49, 0xa5, 0x20, 0x0b, 0xfd, 0x12, 0x73, 0x53, 0x85, 0xb4,
	0xb9, 0x04, 0x53, 0x90, 0xc4, 0xe2, 0xf3, 0x12, 0x73, 0x53, 0xa1, 0xc6, 0x08, 0xa4, 0xa0, 0x2b,
	0x8e, 0xe0, 0x62, 0x2b, 0x2e, 0x49, 0x2c, 0x29, 0x2d, 0x96, 0x60, 0x02, 0xa9, 0x70, 0x72, 0x38,
	0x71, 0x4f, 0x9e, 0xe1, 0xd6, 0x3d, 0x79, 0xf5, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4,
	0xfc, 0x5c, 0xfd, 0xe4, 0xfc, 0xe2, 0xdc, 0xfc, 0x62, 0x28, 0xa5, 0x5b, 0x9c, 0x92, 0xad, 0x5f,
	0x52, 0x59, 0x90, 0x5a, 0xac, 0x17, 0x9a, 0x99, 0x57, 0xf2, 0xe9, 0x9e, 0x3c, 0x6f, 0x65, 0x62,
	0x6e, 0x8e, 0x95, 0x12, 0xc4, 0x18, 0xa5, 0x20, 0xa8, 0x79, 0x4e, 0x5e, 0x27, 0x1e, 0xc9, 0x31,
	0x5e, 0x78, 0x24, 0xc7, 0xf8, 0xe0, 0x91, 0x1c, 0xe3, 0x84, 0xc7, 0x72, 0x0c, 0x17, 0x1e, 0xcb,
	0x31, 0xdc, 0x78, 0x2c, 0xc7, 0x10, 0x65, 0x80, 0x64, 0x76, 0x70, 0x66, 0x5a, 0x72, 0x46, 0x62,
	0x66, 0x9e, 0x3e, 0x2c, 0x98, 0x2b, 0x50, 0x03, 0x1a, 0x6c, 0x53, 0x12, 0x1b, 0x38, 0xd4, 0x8c,
	0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xce, 0x1e, 0x1f, 0xe3, 0x8d, 0x01, 0x00, 0x00,
}

func (m *QueryRecordsByRecipientAddr) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryRecordsByRecipientAddr) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryRecordsByRecipientAddr) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintQuerier(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *QueryRecordsByDistributionName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueryRecordsByDistributionName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueryRecordsByDistributionName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size := m.Status.Size()
		i -= size
		if _, err := m.Status.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintQuerier(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.DistributionName) > 0 {
		i -= len(m.DistributionName)
		copy(dAtA[i:], m.DistributionName)
		i = encodeVarintQuerier(dAtA, i, uint64(len(m.DistributionName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintQuerier(dAtA []byte, offset int, v uint64) int {
	offset -= sovQuerier(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueryRecordsByRecipientAddr) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovQuerier(uint64(l))
	}
	return n
}

func (m *QueryRecordsByDistributionName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DistributionName)
	if l > 0 {
		n += 1 + l + sovQuerier(uint64(l))
	}
	l = m.Status.Size()
	n += 1 + l + sovQuerier(uint64(l))
	return n
}

func sovQuerier(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQuerier(x uint64) (n int) {
	return sovQuerier(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueryRecordsByRecipientAddr) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerier
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryRecordsByRecipientAddr: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryRecordsByRecipientAddr: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerier
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerier
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerier
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuerier(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerier
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QueryRecordsByDistributionName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQuerier
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueryRecordsByDistributionName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueryRecordsByDistributionName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DistributionName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerier
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerier
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerier
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DistributionName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQuerier
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQuerier
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQuerier
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Status.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQuerier(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthQuerier
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQuerier(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQuerier
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuerier
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQuerier
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQuerier
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQuerier
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQuerier
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQuerier        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQuerier          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQuerier = fmt.Errorf("proto: unexpected end of group")
)
