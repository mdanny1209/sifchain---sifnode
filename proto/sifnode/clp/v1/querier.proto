syntax = "proto3";
package sifnode.clp.v1;

import "gogoproto/gogo.proto";
import "sifnode/clp/v1/types.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

option go_package = "github.com/sifchain/sifnode/x/clp/types";

service Query {
  rpc QueryGetPool(PoolReq) returns (PoolRes);
  rpc QueryGetPools(PoolsReq) returns (PoolsRes);
  rpc LiquidityProvider(LiquidityProviderReq) returns (LiquidityProviderRes);
  rpc GetAssetList(AssetListReq) returns (AssetListRes);
  rpc GetLiquidityProviderList(LiquidityProviderListReq) returns (LiquidityProviderListRes);
}

message PoolReq {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string symbol = 1;
}

message PoolRes {
  sifnode.clp.v1.Pool pool               = 1;
  string              clp_module_address = 2;
  int64               height             = 3;
}

message PoolsReq {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message PoolsRes {
  repeated sifnode.clp.v1.Pool pools              = 1;
  string                       clp_module_address = 2;
  int64                        height             = 3;

  cosmos.base.query.v1beta1.PageResponse pagination = 4;
}

message LiquidityProviderReq {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string symbol     = 1;
  string lp_address = 2;
}

message LiquidityProviderRes {
  sifnode.clp.v1.LiquidityProvider liquidity_provider     = 1;
  string                           native_asset_balance   = 2;
  string                           external_asset_balance = 3;
  int64                            height                 = 4;
}

message AssetListReq {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string lp_address = 1;

  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message AssetListRes {
  repeated sifnode.clp.v1.Asset          assets     = 1;
  int64                                  height     = 2;
  cosmos.base.query.v1beta1.PageResponse pagination = 3;
}

message LiquidityProviderListReq {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string                                symbol     = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message LiquidityProviderListRes {
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
