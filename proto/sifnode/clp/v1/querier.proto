syntax = "proto3";
package sifnode.clp.v1;

import "gogoproto/gogo.proto";
import "sifnode/clp/v1/types.proto";

option go_package = "github.com/sifchain/sifnode/x/clp/types";

service Query {
  rpc GetPool(GetPoolRequest) returns (GetPoolResponse);
  rpc LiquidityProvider(LiquidityProviderRequest) returns (LiquidityProviderResponse);
  rpc GetAssetList(GetAssetListRequest) returns (GetAssetListResponse);
  rpc GetLiquidityProviderList(GetLiquidityProviderListRequest) returns (GetLiquidityProviderListResponse);
}

message GetPoolRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string symbol = 1;
}

message GetPoolResponse {
  sifnode.clp.v1.Pool pool               = 1;
  string              clp_module_address = 2;
  int64               height             = 3;
}

message LiquidityProviderRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string Symbol     = 1;
  string lp_address = 2;
}

message LiquidityProviderResponse {
  sifnode.clp.v1.LiquidityProvider liquidity_provider     = 1;
  string                           native_asset_balance   = 2;
  string                           external_asset_balance = 3;
  int64                            height                 = 4;
}

message GetAssetListRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string lp_address = 1;
}

message GetAssetListResponse {}

message GetLiquidityProviderListRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string Symbol = 1;
}

message GetLiquidityProviderListResponse {}
